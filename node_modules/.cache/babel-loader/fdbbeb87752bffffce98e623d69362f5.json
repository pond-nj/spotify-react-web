{"ast":null,"code":"var _jsxFileName = \"/Users/nutdranai.jaruthikorn/Desktop/JsProject/jammming/src/Components/App/App.js\";\nimport React from 'react';\nimport './App.css';\nimport SearchResults from '../SearchResults/SearchResults.js';\nimport SearchBar from '../SearchBar/SearchBar.js';\nimport Playlist from '../Playlist/Playlist.js';\nimport Spotify from '../../util/Spotify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchResults: [],\n      playlistName: \"New Playlist\",\n      playlistTracks: []\n    };\n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n    this.updatePlaylistName = this.updatePlaylistName.bind(this);\n    this.savePlaylist = this.savePlaylist.bind(this);\n    this.search = this.search.bind(this);\n    this.establishToken = this.establishToken.bind(this);\n  }\n\n  addTrack(track) {\n    if (this.state.playlistTracks.find(savedTrack => {\n      return savedTrack.id === track.id;\n    })) {\n      return;\n    } else {\n      this.setState(prevState => {\n        return {\n          playlistTracks: prevState.playlistTracks.concat(track)\n        };\n      });\n      /*\n      this.setState( prevState => {\n        return { count: prevState.count+1 };\n      });*/\n    }\n  }\n\n  removeTrack(track) {\n    let tracks = this.state.playlistTracks;\n    tracks = tracks.filter(currentTrack => {\n      return currentTrack.id !== track.id;\n    });\n    this.setState({\n      playlistTracks: tracks\n    });\n  }\n\n  updatePlaylistName(name) {\n    this.setState({\n      playlistName: name\n    });\n  }\n\n  savePlaylist() {\n    let trackURIs = this.state.playlistTracks.map(track => {\n      return track.uri;\n    });\n    Spotify.savePlaylist(this.state.playlistName, trackURIs);\n    this.setState({\n      playlistName: \"\",\n      playlistTracks: []\n    });\n  }\n\n  search(term) {\n    console.log(term);\n    Spotify.search(term).then(searchResults => {\n      this.setState({\n        searchResults: searchResults\n      });\n    });\n    /*\n    this.setState({\n      SearchResults: Spotify.search( term ) \n    });\n    */\n  }\n\n  establishToken() {\n    window.onload = Spotify.getAccessToken();\n  }\n\n  render() {\n    this.establishToken();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Ja\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"highlight\",\n          children: \"mmm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this), \"ing \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n          onSearch: this.search\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App-playlist\",\n          children: [/*#__PURE__*/_jsxDEV(SearchResults, {\n            searchResults: this.state.searchResults,\n            onAdd: this.addTrack\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Playlist, {\n            playlistTracks: this.state.playlistTracks,\n            playlistName: this.state.playlistName,\n            onRemove: this.removeTrack,\n            onNameChange: this.updatePlaylistName,\n            onSave: this.savePlaylist\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/nutdranai.jaruthikorn/Desktop/JsProject/jammming/src/Components/App/App.js"],"names":["React","SearchResults","SearchBar","Playlist","Spotify","App","Component","constructor","props","state","searchResults","playlistName","playlistTracks","addTrack","bind","removeTrack","updatePlaylistName","savePlaylist","search","establishToken","track","find","savedTrack","id","setState","prevState","concat","tracks","filter","currentTrack","name","trackURIs","map","uri","term","console","log","then","window","onload","getAccessToken","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport SearchResults from '../SearchResults/SearchResults.js';\nimport SearchBar from '../SearchBar/SearchBar.js';\nimport Playlist from '../Playlist/Playlist.js';\nimport Spotify from '../../util/Spotify';\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state ={\n      searchResults:[],\n      playlistName:\"New Playlist\",\n      playlistTracks:[],\n    };\n    this.addTrack=this.addTrack.bind(this);\n    this.removeTrack=this.removeTrack.bind(this);\n    this.updatePlaylistName=this.updatePlaylistName.bind(this);\n    this.savePlaylist=this.savePlaylist.bind(this);\n    this.search=this.search.bind(this);\n    this.establishToken=this.establishToken.bind(this);\n  }\n\n  addTrack( track ){\n    if( this.state.playlistTracks.find( savedTrack => { return savedTrack.id === track.id } ) ) {\n      return;\n    } else {\n      this.setState( prevState => {\n        return {playlistTracks: prevState.playlistTracks.concat(track)};\n      });\n      /*\n      this.setState( prevState => {\n        return { count: prevState.count+1 };\n      });*/\n\n    }\n  }\n\n  removeTrack( track ){\n    let tracks = this.state.playlistTracks;\n    tracks = tracks.filter( currentTrack => { return currentTrack.id !== track.id });\n    this.setState({\n      playlistTracks:tracks\n    });\n  }\n\n  updatePlaylistName( name ){\n    this.setState({\n      playlistName: name\n    });\n  }\n\n  savePlaylist(){\n    let trackURIs = this.state.playlistTracks.map( (track) => { return track.uri } );\n    Spotify.savePlaylist( this.state.playlistName ,trackURIs );\n    this.setState({\n      playlistName:\"\",\n      playlistTracks:[]\n    });\n  }\n\n  search( term ){\n    console.log( term );\n    Spotify.search( term ).then( searchResults => {\n      this.setState({ searchResults: searchResults })\n    });\n\n    /*\n    this.setState({\n      SearchResults: Spotify.search( term ) \n    });\n    */\n  }\n\n  establishToken(){\n    window.onload=Spotify.getAccessToken();\n  }\n\n  render(){\n    this.establishToken();\n\n    return (\n      <div>\n        {/* DEBUGGER */}\n        <h1>Ja<span className=\"highlight\">mmm</span>ing {/*this.state.count*/}</h1>\n        <div className=\"App\">\n          <SearchBar\n          onSearch={this.search}/>\n\n          <div className=\"App-playlist\">\n\n            <SearchResults\n            searchResults={this.state.searchResults}\n            onAdd={this.addTrack}/>\n\n            <Playlist\n            playlistTracks={this.state.playlistTracks} \n            playlistName={this.state.playlistName}\n            onRemove={this.removeTrack}\n            onNameChange={this.updatePlaylistName}\n            onSave={this.savePlaylist}/>\n\n          </div>\n\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}