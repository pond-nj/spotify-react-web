{"ast":null,"code":"var _jsxFileName = \"/Users/nutdranai.jaruthikorn/Desktop/JsProject/jammming/src/Components/App/App.js\";\nimport React from 'react';\nimport './App.css';\nimport SearchResults from '../SearchResults/SearchResults.js';\nimport SearchBar from '../SearchBar/SearchBar.js';\nimport Playlist from '../Playlist/Playlist.js';\nimport Spotify from '../../util/Spotify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchResults: [{\n        name: \"name1\",\n        artist: \"artist1\",\n        album: \"album1\",\n        id: \"id1\"\n      }],\n      playlistName: \"New Playlist\",\n      playlistTracks: [{\n        name: \"name2\",\n        artist: \"artist2\",\n        album: \"album2\",\n        id: \"id2\",\n        uri: \"uri2\"\n      }] //count:0,\n\n    };\n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n    this.updatePlaylistName = this.updatePlaylistName.bind(this);\n    this.savePlaylist = this.savePlaylist.bind(this);\n    this.search = this.search.bind(this);\n  }\n\n  addTrack(track) {\n    if (this.state.playlistTracks.find(savedTrack => {\n      return savedTrack.id === track.id;\n    })) {\n      return;\n    } else {\n      this.setState(prevState => {\n        return {\n          playlistTracks: prevState.playlistTracks.concat(track)\n        };\n      });\n      /*\n      this.setState( prevState => {\n        return { count: prevState.count+1 };\n      });*/\n    }\n  }\n\n  removeTrack(track) {\n    let tracks = this.state.playlistTracks;\n    tracks = tracks.filter(currentTrack => {\n      return currentTrack.id !== track.id;\n    });\n    this.setState({\n      playlistTracks: tracks\n    });\n  }\n\n  updatePlaylistName(name) {\n    this.setState({\n      playlistName: name\n    });\n  }\n\n  savePlaylist() {\n    let trackURIs = this.state.playlistTracks.map(track => {\n      return track.uri;\n    });\n  }\n\n  search(term) {\n    console.log(term);\n    Spotify.search(term).then(searchResults => {\n      this.setState({\n        searchResults: searchResults\n      });\n    });\n    /*\n    this.setState({\n      SearchResults: Spotify.search( term ) \n    });\n    */\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Ja\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"highlight\",\n          children: \"mmm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this), \"ing \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n          onSearch: this.search\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App-playlist\",\n          children: [/*#__PURE__*/_jsxDEV(SearchResults, {\n            searchResults: this.state.searchResults,\n            onAdd: this.addTrack\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Playlist, {\n            playlistTracks: this.state.playlistTracks,\n            playlistName: this.state.playlistName,\n            onRemove: this.removeTrack,\n            onNameChange: this.updatePlaylistName,\n            onSave: this.savePlaylist\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/nutdranai.jaruthikorn/Desktop/JsProject/jammming/src/Components/App/App.js"],"names":["React","SearchResults","SearchBar","Playlist","Spotify","App","Component","constructor","props","state","searchResults","name","artist","album","id","playlistName","playlistTracks","uri","addTrack","bind","removeTrack","updatePlaylistName","savePlaylist","search","track","find","savedTrack","setState","prevState","concat","tracks","filter","currentTrack","trackURIs","map","term","console","log","then","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport SearchResults from '../SearchResults/SearchResults.js';\nimport SearchBar from '../SearchBar/SearchBar.js';\nimport Playlist from '../Playlist/Playlist.js';\nimport Spotify from '../../util/Spotify';\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state ={\n      searchResults:[{ name: \"name1\",\n        artist: \"artist1\",\n        album: \"album1\",\n        id: \"id1\",\n        }],\n      playlistName:\"New Playlist\",\n      playlistTracks:[{ name: \"name2\",\n        artist: \"artist2\",\n        album: \"album2\",\n        id: \"id2\",\n        uri: \"uri2\"\n        }],\n      //count:0,\n    };\n    this.addTrack=this.addTrack.bind(this);\n    this.removeTrack=this.removeTrack.bind(this);\n    this.updatePlaylistName=this.updatePlaylistName.bind(this);\n    this.savePlaylist=this.savePlaylist.bind(this);\n    this.search=this.search.bind(this);\n  }\n\n  addTrack( track ){\n    if( this.state.playlistTracks.find( savedTrack => { return savedTrack.id === track.id } ) ) {\n      return;\n    } else {\n      this.setState( prevState => {\n        return {playlistTracks: prevState.playlistTracks.concat(track)};\n      });\n      /*\n      this.setState( prevState => {\n        return { count: prevState.count+1 };\n      });*/\n\n    }\n  }\n\n  removeTrack( track ){\n    let tracks = this.state.playlistTracks;\n    tracks = tracks.filter( currentTrack => { return currentTrack.id !== track.id });\n    this.setState({\n      playlistTracks:tracks\n    });\n  }\n\n  updatePlaylistName( name ){\n    this.setState({\n      playlistName: name\n    });\n  }\n\n  savePlaylist(){\n    let trackURIs = this.state.playlistTracks.map( (track) => { return track.uri } );\n\n  }\n\n  search( term ){\n    console.log( term );\n    Spotify.search( term ).then( searchResults => {\n      this.setState({ searchResults: searchResults })\n    });\n\n    /*\n    this.setState({\n      SearchResults: Spotify.search( term ) \n    });\n    */\n  }\n\n  render(){\n    return (\n      <div>\n        {/* DEBUGGER */}\n        <h1>Ja<span className=\"highlight\">mmm</span>ing {/*this.state.count*/}</h1>\n        <div className=\"App\">\n          <SearchBar\n          onSearch={this.search}/>\n          <div className=\"App-playlist\">\n            <SearchResults\n            searchResults={this.state.searchResults}\n            onAdd={this.addTrack}/>\n            <Playlist\n            playlistTracks={this.state.playlistTracks} \n            playlistName={this.state.playlistName}\n            onRemove={this.removeTrack}\n            onNameChange={this.updatePlaylistName}\n            onSave={this.savePlaylist}/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}